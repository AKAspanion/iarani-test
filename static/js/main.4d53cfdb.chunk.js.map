{"version":3,"sources":["components/Spacer.jsx","components/NoteList.jsx","components/NoteForm.jsx","components/NoteModal.jsx","components/EmptyState.jsx","pages/Notes.jsx","actions/index.js","actions/types.js","utils/index.js","hocs/useResizeObserver.jsx","App.js","serviceWorker.js","reducers/index.js","reducers/notesReducers.js","reducers/settingsReducers.js","index.js","services/storageService.js"],"names":["Spacer","style","flexGrow","NoteList","notes","isEdit","onEdit","onShow","onDelete","onSearch","emptyState","notesLength","length","Fragment","className","InputGroup","Prepend","Text","path","mdiMagnify","size","Form","Control","placeholder","onChange","e","target","value","ListGroup","TransitionGroup","borderRadius","map","note","CSSTransition","key","id","timeout","classNames","Item","role","title","onClick","date","slice","Button","mdiPencil","variant","disabled","mdiTrashCan","NoteForm","active","onOpen","content","onSubmit","onDiscard","validated","Card","maxWidth","minWidth","overflow","Accordion","activeKey","Toggle","eventKey","as","Header","mdiPlus","Collapse","Body","Group","controlId","type","Row","width","minDate","Date","NoteModal","onHide","rest","Modal","centered","aria-labelledby","closeButton","Title","Footer","EmptyState","subtitle","img","alt","src","connect","state","settings","addNoteToState","payload","updateNoteInState","deleteNoteInState","updateSortBySetting","isSmall","useMemo","useState","setId","setTitle","setContent","setIsEdit","setDate","setActive","modalData","setModalData","searchText","setSearchText","setValidated","modalShow","setModalShow","useEffect","toggleModal","show","clearForm","closeFormWhenSmall","handleFormChange","prop","Container","Dropdown","alignRight","mdiFilter","Menu","sortBy","Col","xs","lg","preventDefault","toDateString","Math","random","toString","substr","populateForm","setTimeout","window","scroll","top","behavior","toLowerCase","sort","a","b","localeCompare","filter","includes","filteredNotes","emptyStateProps","n","useResizeObserver","undefined","height","setSize","node","setNode","observer","useRef","disconnect","useCallback","current","observe","ResizeObserver","contentRect","useLayoutEffect","App","ref","Boolean","location","hostname","match","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","localState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","reducers","applyMiddleware","reduxThunk","subscribe","stringify","setItem","console","error","saveState","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4d53cfdb.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Spacer() {\n  return <div style={{ flexGrow: 1 }} />;\n}\n\nexport default Spacer;\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport Icon from \"@mdi/react\";\nimport { mdiMagnify, mdiPencil, mdiTrashCan } from \"@mdi/js\";\nimport { Button, ListGroup, Form, InputGroup } from \"react-bootstrap\";\n\nimport { Spacer, EmptyState } from \".\";\n\nfunction NoteList({\n  notes,\n  isEdit,\n  onEdit,\n  onShow,\n  onDelete,\n  onSearch,\n  emptyState,\n}) {\n  const notesLength = notes.length;\n  return (\n    <React.Fragment>\n      <div className=\"mb-4 d-flex align-items-center\">\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text className=\"px-3\">\n              <Icon path={mdiMagnify} size={0.9}></Icon>\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            placeholder=\"Search\"\n            onChange={(e) => onSearch(e.target.value)}\n          ></Form.Control>\n        </InputGroup>\n      </div>\n      {!!notesLength && (\n        <ListGroup className=\"note-list\">\n          <TransitionGroup style={{ borderRadius: \"0.25rem\" }}>\n            {notes.map((note) => (\n              <CSSTransition key={note.id} timeout={500} classNames=\"note\">\n                <ListGroup.Item className=\"px-3 note-list-item\">\n                  <div className=\"d-flex align-items-center\">\n                    <div\n                      role=\"button\"\n                      title={note.title}\n                      onClick={() => onShow(note)}\n                      className=\"text-left text-primary note-list-title\"\n                    >\n                      <span>{note.title}</span>\n                    </div>\n                    <Spacer />\n                    <div className=\"text-nowrap mr-3 font-weight-light small\">\n                      {(note.date || \"\").slice(4, 10)}\n                    </div>\n                    <Button\n                      size=\"sm\"\n                      className=\"mr-2\"\n                      onClick={() => onEdit(note)}\n                    >\n                      <Icon path={mdiPencil} size={0.7}></Icon>\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"danger\"\n                      disabled={isEdit}\n                      onClick={() => onDelete(note)}\n                    >\n                      <Icon path={mdiTrashCan} size={0.7}></Icon>\n                    </Button>\n                  </div>\n                </ListGroup.Item>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        </ListGroup>\n      )}\n      {!notesLength && (\n        <EmptyState className=\"note-empty-state\" {...emptyState} />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default NoteList;\n","import React from \"react\";\n\nimport Icon from \"@mdi/react\";\nimport { mdiPlus } from \"@mdi/js\";\nimport Calendar from \"react-calendar\";\nimport { Row, Card, Form, Button, Accordion } from \"react-bootstrap\";\n\nimport { Spacer } from \".\";\n\nfunction NoteForm({\n  date,\n  title,\n  active,\n  isEdit,\n  onOpen,\n  content,\n  onChange,\n  onSubmit,\n  onDiscard,\n  validated,\n}) {\n  return (\n    <div className=\"d-flex flex-column align-items-center justify-content-center\">\n      <Card style={{ maxWidth: \"350px\", minWidth: \"100%\", overflow: \"hidden\" }}>\n        <Accordion activeKey={active}>\n          <Accordion.Toggle\n            role=\"button\"\n            eventKey=\"active\"\n            as={Card.Header}\n            onClick={onOpen}\n            className={`text-left px-3 px-sm-3 ${\n              active !== \"active\" ? \"border-bottom-0\" : \"\"\n            }`}\n          >\n            <div className=\"d-flex align-items-center\">\n              <span>Add Note</span>\n              <Spacer />\n              <Icon path={mdiPlus} size={0.8} />\n            </div>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"active\">\n            <Card.Body className=\"p-3 py-3 p-sm-3\">\n              <Form className=\"text-left\" onSubmit={onSubmit}>\n                <Form.Group controlId=\"formBasicTitle\">\n                  {/* <Form.Label>Title</Form.Label> */}\n                  <Form.Control\n                    type=\"text\"\n                    value={title}\n                    placeholder=\"Title\"\n                    onChange={(e) => onChange(\"Title\", e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicContent\">\n                  <Form.Control\n                    type=\"text\"\n                    as=\"textarea\"\n                    value={content}\n                    placeholder=\"Content\"\n                    onChange={(e) => onChange(\"Content\", e.target.value)}\n                  />\n                </Form.Group>\n                <Row className=\"px-3\">\n                  <Button\n                    className=\"mr-2\"\n                    onClick={onDiscard}\n                    variant=\"outline-secondary\"\n                  >\n                    Discard\n                  </Button>\n                  <Spacer />\n                  <Button variant=\"primary\" type=\"submit\" disabled={!validated}>\n                    {isEdit ? \"Update\" : \"Save\"}\n                  </Button>\n                </Row>\n              </Form>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Accordion>\n      </Card>\n      <Card\n        className=\"text-center mt-3 mt-sm-4 border-none\"\n        style={{ width: \"330px\", overflow: \"hidden\" }}\n      >\n        <Accordion activeKey={active}>\n          <Accordion.Collapse eventKey=\"active\">\n            <Calendar\n              value={date}\n              className=\"card\"\n              minDate={new Date()}\n              onChange={(e) => onChange(\"Date\", e)}\n            />\n          </Accordion.Collapse>\n        </Accordion>\n      </Card>\n    </div>\n  );\n}\n\nexport default NoteForm;\n","import React from \"react\";\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { Spacer } from \".\";\n\nfunction NoteModal({ date, title, onHide, content, ...rest }) {\n  return (\n    <Modal\n      {...rest}\n      size=\"lg\"\n      centered\n      aria-labelledby=\"contained-modal-title-vcenter\"\n    >\n      <Modal.Header closeButton onHide={onHide}>\n        <Modal.Title id=\"contained-modal-title-vcenter\">{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{content}</Modal.Body>\n      <Modal.Footer>\n        <div className=\"h6 px-0\">{date}</div>\n        <Spacer />\n        <Button onClick={onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default NoteModal;\n","import React from \"react\";\n\nimport { Card } from \"react-bootstrap\";\nfunction EmptyState({\n  subtitle,\n  className,\n  title = \"No data found\",\n  img = \"images/empty-state.svg\",\n}) {\n  return (\n    <Card\n      className={`d-flex align-items-center justify-content-center full-width ${className}`}\n    >\n      <div className=\"text-center pb-4 mb-5\" style={{ maxWidth: \"250px\" }}>\n        <img alt=\"empty state\" src={img} />\n        {!!title && <div className=\"h5\">{title}</div>}\n        {!!subtitle && <div className=\"font-weight-light\">{subtitle}</div>}\n      </div>\n    </Card>\n  );\n}\n\nexport default EmptyState;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Icon from \"@mdi/react\";\nimport { mdiFilter } from \"@mdi/js\";\nimport { Row, Col, Card, Container, Dropdown } from \"react-bootstrap\";\n\nimport { Spacer, NoteForm, NoteList, NoteModal } from \"../components\";\nimport { addNote, updateNote, deleteNote, updateSortBy } from \"../actions\";\nimport { uid } from \"../utils\";\n\nfunction Notes({\n  size,\n  notes,\n  settings,\n  addNoteToState,\n  updateNoteInState,\n  deleteNoteInState,\n  updateSortBySetting,\n}) {\n  // state\n  const isSmall = useMemo(() => size.width <= 768, [size.width]);\n\n  const [id, setId] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [isEdit, setIsEdit] = useState(false);\n  const [date, setDate] = useState(new Date());\n  const [active, setActive] = useState(\"active\");\n  const [modalData, setModalData] = useState({});\n  const [searchText, setSearchText] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n\n  // effects\n  useEffect(() => {\n    if (isSmall) {\n      setActive(null);\n    } else {\n      setActive(\"active\");\n    }\n  }, [isSmall]);\n\n  useEffect(() => {\n    setValidated(!!(title && date));\n  }, [title, content, date]);\n\n  // methods\n  const emptyStateProps = () => {\n    const emptyState = {\n      title: \"No Notes Found\",\n      img: \"images/empty-state.svg\",\n      subtitle: \"When you are ready, go ahead and add a note\",\n    };\n    if (searchText && notes.length) {\n      emptyState.img = \"images/empty-search.svg\";\n      emptyState.subtitle = \"To widen your search, change or remove filters\";\n    }\n    return emptyState;\n  };\n\n  const toggleModal = (show, note) => {\n    setModalShow(show);\n    if (show && note) {\n      setModalData({ ...note });\n    } else {\n      setModalData({});\n    }\n  };\n\n  const populateForm = ({ date, title, content, id }) => {\n    handleFormChange(\"Id\", id);\n    handleFormChange(\"Title\", title);\n    handleFormChange(\"Content\", content);\n    handleFormChange(\"Date\", new Date(date));\n  };\n\n  const clearForm = () => {\n    setId(\"\");\n    setTitle(\"\");\n    setContent(\"\");\n    setIsEdit(false);\n    setDate(new Date());\n  };\n\n  const scrollTop = () => {\n    setTimeout(() => {\n      window.scroll({\n        top: 0,\n        behavior: \"smooth\",\n      });\n    }, 500);\n  };\n\n  const closeFormWhenSmall = () => {\n    if (isSmall) {\n      setActive(null);\n    }\n  };\n\n  const toggleFormActive = () => {\n    setActive(active === \"active\" ? null : \"active\");\n  };\n\n  const filteredNotes = () => {\n    const { sortBy } = settings;\n\n    let sortedNotes = notes.sort((a, b) => {\n      if (sortBy === \"date\") {\n        return new Date(b.date) - new Date(a.date);\n      } else {\n        return a.title.localeCompare(b.title);\n      }\n    });\n\n    return sortedNotes.filter(({ title }) =>\n      title.toLowerCase().includes(searchText)\n    );\n  };\n\n  // handlers\n  const handleFormChange = (prop, value) => {\n    switch (prop) {\n      case \"Date\":\n        setDate(value);\n        break;\n      case \"Title\":\n        setTitle(value);\n        break;\n      case \"Content\":\n        setContent(value);\n        break;\n      case \"Id\":\n        setId(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    if (e.preventDefault) e.preventDefault();\n\n    if (!validated) return;\n\n    if (isEdit) {\n      updateNoteInState({ title, content, date: date.toDateString(), id });\n    } else {\n      addNoteToState({ title, content, date: date.toDateString(), id: uid() });\n    }\n    clearForm();\n    closeFormWhenSmall();\n  };\n\n  const handleFormDiscard = () => {\n    clearForm();\n    closeFormWhenSmall();\n  };\n\n  const handleSearch = (searchText) => {\n    setSearchText((searchText || \"\").toLowerCase());\n  };\n\n  const handleEdit = (note) => {\n    setIsEdit(true);\n    setActive(\"active\");\n\n    populateForm(note);\n    scrollTop();\n  };\n\n  const handleDelete = (note) => {\n    if (isEdit) return;\n\n    deleteNoteInState(note);\n  };\n\n  return (\n    <Container className=\"p-3 p-sm-4\">\n      <NoteModal\n        {...modalData}\n        show={modalShow}\n        onHide={() => toggleModal(false)}\n      />\n      <Card>\n        <div className=\"d-flex px-3 pt-3 px-sm-4\">\n          <h2 className=\"pb-1\">Notes</h2>\n          <Spacer />\n          <Dropdown alignRight>\n            <Dropdown.Toggle size=\"sm\" variant=\"outline-secondary\">\n              <Icon path={mdiFilter} size={0.9}></Icon>\n            </Dropdown.Toggle>\n            <Dropdown.Menu className=\"note-dropdown\">\n              <Dropdown.Header>Sort by</Dropdown.Header>\n              <Dropdown.Item\n                active={settings.sortBy === \"date\"}\n                onClick={() => updateSortBySetting(\"date\")}\n              >\n                Date\n              </Dropdown.Item>\n              <Dropdown.Item\n                active={settings.sortBy === \"title\"}\n                onClick={() => updateSortBySetting(\"title\")}\n              >\n                Title\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        <hr className=\"mt-1\" />\n        <Row className=\"px-3 px-sm-4\">\n          <Col xs={12} lg={\"auto\"} className=\"pb-3 pt-sm-2 pb-sm-4\">\n            <NoteForm\n              date={date}\n              title={title}\n              active={active}\n              isEdit={isEdit}\n              content={content}\n              validated={validated}\n              onOpen={toggleFormActive}\n              onChange={handleFormChange}\n              onSubmit={handleFormSubmit}\n              onDiscard={handleFormDiscard}\n            />\n          </Col>\n          <hr\n            className={`d-sm-none full-width ${\n              active === \"active\" ? \"mt-0\" : \"mt-n3\"\n            }`}\n          />\n          <Col xs={12} lg={\"auto\"} className=\"flex-grow-1 pb-3 pt-sm-2 pb-sm-4\">\n            <NoteList\n              isEdit={isEdit}\n              onEdit={handleEdit}\n              onDelete={handleDelete}\n              onSearch={handleSearch}\n              notes={filteredNotes()}\n              emptyState={emptyStateProps()}\n              onShow={(n) => toggleModal(true, n)}\n            />\n          </Col>\n        </Row>\n      </Card>\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notes: state.notes.notes,\n    settings: state.settings,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addNoteToState: addNote,\n  updateNoteInState: updateNote,\n  deleteNoteInState: deleteNote,\n  updateSortBySetting: updateSortBy,\n})(Notes);\n","import { ADD_NOTE, UPDATE_NOTE, DELETE_NOTE, UPDATE_SORT_BY } from \"./types\";\n\nexport const addNote = (payload) => {\n  return {\n    type: ADD_NOTE,\n    payload,\n  };\n};\n\nexport const updateNote = (payload) => {\n  return {\n    type: UPDATE_NOTE,\n    payload,\n  };\n};\n\nexport const deleteNote = (payload) => {\n  return {\n    type: DELETE_NOTE,\n    payload,\n  };\n};\n\nexport const updateSortBy = (payload) => {\n  return {\n    type: UPDATE_SORT_BY,\n    payload,\n  };\n};\n","export const ADD_NOTE = 'ADD_NOTE';\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\nexport const DELETE_NOTE = 'DELETE_NOTE';\nexport const UPDATE_SORT_BY = 'UPDATE_SORT_BY';","export const uid = () => {\n  return \"_\" + Math.random().toString(36).substr(2, 9);\n};\n","import { useRef, useMemo, useLayoutEffect, useState, useCallback } from \"react\";\n\nconst useResizeObserver = () => {\n  const [size, setSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  const [node, setNode] = useState(null);\n\n  const observer = useRef(null);\n\n  const disconnect = useCallback(() => {\n    const { current } = observer;\n    current && current.disconnect();\n  }, []);\n\n  const observe = useCallback(() => {\n    observer.current = new ResizeObserver(\n      ([\n        {\n          contentRect: { width, height },\n        },\n      ]) => setSize({ width, height })\n    );\n    node && observer.current.observe(node);\n  }, [node]);\n\n  useLayoutEffect(() => {\n    observe();\n    return () => disconnect();\n  }, [observe, disconnect]);\n\n  return useMemo(() => [setNode, size], [setNode, size]);\n};\n\nexport default useResizeObserver;\n","import React from \"react\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\nimport { Notes } from \"./pages\";\nimport { useResizeObserver } from \"./hocs\";\n\nfunction App() {\n  const [ref, size] = useResizeObserver();\n  return (\n    <div ref={ref} className=\"App\">\n      <Notes size={size} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport notesReducer from \"./notesReducers\";\nimport settingsReducer from \"./settingsReducers\";\n\nexport default combineReducers({\n  notes: notesReducer,\n  settings: settingsReducer,\n});\n","import { ADD_NOTE, UPDATE_NOTE, DELETE_NOTE } from \"../actions/types\";\n\nexport default (state = { notes: [] }, action) => {\n  switch (action.type) {\n    case ADD_NOTE:\n      return { ...state, notes: [...state.notes, action.payload] };\n    case UPDATE_NOTE:\n      return {\n        ...state,\n        notes: [\n          ...state.notes.map((note) => {\n            if (note.id === action.payload.id) {\n              return { ...action.payload };\n            }\n            return note;\n          }),\n        ],\n      };\n    case DELETE_NOTE:\n      return {\n        ...state,\n        notes: [...state.notes.filter((note) => note.id !== action.payload.id)],\n      };\n    default:\n      return state;\n  }\n};\n","import { UPDATE_SORT_BY } from \"../actions/types\";\n\nexport default (state = { sortBy: \"title\" }, action) => {\n  switch (action.type) {\n    case UPDATE_SORT_BY:\n      return { ...state, sortBy: action.payload };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reduxThunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport reducers from \"./reducers\";\nimport { loadState, saveState } from \"./services\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst localState = loadState();\nconst store = createStore(\n  reducers,\n  localState,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const loadState = () => {\n  try {\n    const localState = localStorage.getItem(\"state\");\n\n    if (!localState) return undefined;\n    return JSON.parse(localState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const localState = JSON.stringify(state);\n\n    localStorage.setItem(\"state\", localState);\n  } catch (err) {\n    console.error(err);\n  }\n};\n"],"sourceRoot":""}