{"version":3,"sources":["components/Spacer.jsx","components/NoteList.jsx","components/NoteForm.jsx","components/NoteModal.jsx","components/EmptyState.jsx","pages/Notes.jsx","actions/index.js","actions/types.js","utils/index.js","hocs/useResizeObserver.jsx","App.js","serviceWorker.js","reducers/index.js","reducers/notesReducers.js","index.js","services/storageService.js"],"names":["Spacer","style","flexGrow","NoteList","notes","isEdit","onEdit","onShow","onDelete","onSearch","emptyState","notesLength","length","Fragment","className","InputGroup","Prepend","Text","path","mdiMagnify","size","Form","Control","placeholder","onChange","e","target","value","ListGroup","TransitionGroup","borderRadius","map","note","CSSTransition","key","id","timeout","classNames","Item","role","title","onClick","date","slice","Button","mdiPencil","variant","disabled","mdiTrashCan","NoteForm","active","onOpen","content","onSubmit","onDiscard","validated","Card","maxWidth","minWidth","overflow","Accordion","activeKey","Toggle","eventKey","as","Header","mdiPlus","Collapse","Body","Group","controlId","type","Row","width","minDate","Date","NoteModal","onHide","rest","Modal","centered","aria-labelledby","closeButton","Title","Footer","EmptyState","subtitle","img","alt","src","connect","state","addNoteToState","payload","updateNoteInState","deleteNoteInState","isSmall","useMemo","useState","setId","setTitle","setContent","setIsEdit","setDate","setActive","modalData","setModalData","searchText","setSearchText","setValidated","modalShow","setModalShow","useEffect","toggleModal","show","clearForm","closeFormWhenSmall","handleFormChange","prop","Container","Col","xs","lg","preventDefault","toDateString","Math","random","toString","substr","populateForm","setTimeout","window","scroll","top","behavior","toLowerCase","emptyStateProps","n","filter","includes","useResizeObserver","undefined","height","setSize","node","setNode","observer","useRef","disconnect","useCallback","current","observe","ResizeObserver","contentRect","useLayoutEffect","App","ref","Boolean","location","hostname","match","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","localState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","reducers","applyMiddleware","reduxThunk","subscribe","stringify","setItem","console","error","saveState","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"8UAMeA,MAJf,WACE,OAAO,yBAAKC,MAAO,CAAEC,SAAU,M,yEC+ElBC,MAzEf,YAQI,IAPFC,EAOC,EAPDA,MACAC,EAMC,EANDA,OACAC,EAKC,EALDA,OACAC,EAIC,EAJDA,OACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,SACAC,EACC,EADDA,WAEMC,EAAcP,EAAMQ,OAC1B,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAU,kCACb,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,CAAiBH,UAAU,QACzB,kBAAC,IAAD,CAAMI,KAAMC,IAAYC,KAAM,OAGlC,kBAACC,EAAA,EAAKC,QAAN,CACEC,YAAY,SACZC,SAAU,SAACC,GAAD,OAAOhB,EAASgB,EAAEC,OAAOC,cAItChB,GACD,kBAACiB,EAAA,EAAD,CAAWd,UAAU,aACnB,kBAACe,EAAA,EAAD,CAAiB5B,MAAO,CAAE6B,aAAc,YACrC1B,EAAM2B,KAAI,SAACC,GAAD,OACT,kBAACC,EAAA,EAAD,CAAeC,IAAKF,EAAKG,GAAIC,QAAS,IAAKC,WAAW,QACpD,kBAACT,EAAA,EAAUU,KAAX,CAAgBxB,UAAU,uBACxB,yBAAKA,UAAU,6BACb,yBACEyB,KAAK,SACLC,MAAOR,EAAKQ,MACZC,QAAS,kBAAMlC,EAAOyB,IACtBlB,UAAU,0CAEV,8BAAOkB,EAAKQ,QAEd,kBAAC,EAAD,MACA,yBAAK1B,UAAU,6CACXkB,EAAKU,MAAQ,IAAIC,MAAM,EAAG,KAE9B,kBAACC,EAAA,EAAD,CACExB,KAAK,KACLN,UAAU,OACV2B,QAAS,kBAAMnC,EAAO0B,KAEtB,kBAAC,IAAD,CAAMd,KAAM2B,IAAWzB,KAAM,MAE/B,kBAACwB,EAAA,EAAD,CACExB,KAAK,KACL0B,QAAQ,SACRC,SAAU1C,EACVoC,QAAS,kBAAMjC,EAASwB,KAExB,kBAAC,IAAD,CAAMd,KAAM8B,IAAa5B,KAAM,eAS7CT,GACA,kBAAC,EAAD,eAAYG,UAAU,oBAAuBJ,M,gBCsBtCuC,MAzFf,YAWI,IAVFP,EAUC,EAVDA,KACAF,EASC,EATDA,MACAU,EAQC,EARDA,OACA7C,EAOC,EAPDA,OACA8C,EAMC,EANDA,OACAC,EAKC,EALDA,QACA5B,EAIC,EAJDA,SACA6B,EAGC,EAHDA,SACAC,EAEC,EAFDA,UACAC,EACC,EADDA,UAEA,OACE,yBAAKzC,UAAU,gEACb,kBAAC0C,EAAA,EAAD,CAAMvD,MAAO,CAAEwD,SAAU,QAASC,SAAU,OAAQC,SAAU,WAC5D,kBAACC,EAAA,EAAD,CAAWC,UAAWX,GACpB,kBAACU,EAAA,EAAUE,OAAX,CACEvB,KAAK,SACLwB,SAAS,SACTC,GAAIR,IAAKS,OACTxB,QAASU,EACTrC,UAAS,iCACI,WAAXoC,EAAsB,kBAAoB,KAG5C,yBAAKpC,UAAU,6BACb,0CACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAMI,KAAMgD,IAAS9C,KAAM,OAG/B,kBAACwC,EAAA,EAAUO,SAAX,CAAoBJ,SAAS,UAC3B,kBAACP,EAAA,EAAKY,KAAN,CAAWtD,UAAU,mBACnB,kBAACO,EAAA,EAAD,CAAMP,UAAU,YAAYuC,SAAUA,GACpC,kBAAChC,EAAA,EAAKgD,MAAN,CAAYC,UAAU,kBAEpB,kBAACjD,EAAA,EAAKC,QAAN,CACEiD,KAAK,OACL5C,MAAOa,EACPjB,YAAY,QACZC,SAAU,SAACC,GAAD,OAAOD,EAAS,QAASC,EAAEC,OAAOC,WAGhD,kBAACN,EAAA,EAAKgD,MAAN,CAAYC,UAAU,oBACpB,kBAACjD,EAAA,EAAKC,QAAN,CACEiD,KAAK,OACLP,GAAG,WACHrC,MAAOyB,EACP7B,YAAY,UACZC,SAAU,SAACC,GAAD,OAAOD,EAAS,UAAWC,EAAEC,OAAOC,WAGlD,kBAAC6C,EAAA,EAAD,CAAK1D,UAAU,QACb,kBAAC8B,EAAA,EAAD,CACE9B,UAAU,OACV2B,QAASa,EACTR,QAAQ,qBAHV,WAOA,kBAAC,EAAD,MACA,kBAACF,EAAA,EAAD,CAAQE,QAAQ,UAAUyB,KAAK,SAASxB,UAAWQ,GAChDlD,EAAS,SAAW,cAQnC,kBAACmD,EAAA,EAAD,CACE1C,UAAU,uCACVb,MAAO,CAAEwE,MAAO,QAASd,SAAU,WAEnC,kBAACC,EAAA,EAAD,CAAWC,UAAWX,GACpB,kBAACU,EAAA,EAAUO,SAAX,CAAoBJ,SAAS,UAC3B,kBAAC,IAAD,CACEpC,MAAOe,EACP5B,UAAU,OACV4D,QAAS,IAAIC,KACbnD,SAAU,SAACC,GAAD,OAAOD,EAAS,OAAQC,W,gBC/DjCmD,MArBf,YAA+D,IAA1ClC,EAAyC,EAAzCA,KAAMF,EAAmC,EAAnCA,MAAOqC,EAA4B,EAA5BA,OAAQzB,EAAoB,EAApBA,QAAY0B,EAAQ,mDAC5D,OACE,kBAACC,EAAA,EAAD,iBACMD,EADN,CAEE1D,KAAK,KACL4D,UAAQ,EACRC,kBAAgB,kCAEhB,kBAACF,EAAA,EAAMd,OAAP,CAAciB,aAAW,EAACL,OAAQA,GAChC,kBAACE,EAAA,EAAMI,MAAP,CAAahD,GAAG,iCAAiCK,IAEnD,kBAACuC,EAAA,EAAMX,KAAP,KAAahB,GACb,kBAAC2B,EAAA,EAAMK,OAAP,KACE,yBAAKtE,UAAU,WAAW4B,GAC1B,kBAAC,EAAD,MACA,kBAACE,EAAA,EAAD,CAAQH,QAASoC,GAAjB,YCEOQ,MAnBf,YAKI,IAJFC,EAIC,EAJDA,SACAxE,EAGC,EAHDA,UAGC,IAFD0B,aAEC,MAFO,gBAEP,MADD+C,WACC,MADK,yBACL,EACD,OACE,kBAAC/B,EAAA,EAAD,CACE1C,UAAS,sEAAiEA,IAE1E,yBAAKA,UAAU,wBAAwBb,MAAO,CAAEwD,SAAU,UACxD,yBAAK+B,IAAI,cAAcC,IAAKF,MACzB/C,GAAS,yBAAK1B,UAAU,MAAM0B,KAC9B8C,GAAY,yBAAKxE,UAAU,qBAAqBwE,MCiM3D,IAMeI,eANS,SAACC,GACvB,MAAO,CACLvF,MAAOuF,EAAMvF,MAAMA,SAIiB,CACtCwF,eCtNqB,SAACC,GACtB,MAAO,CACLtB,KCJoB,WDKpBsB,YDoNFC,kBChNwB,SAACD,GACzB,MAAO,CACLtB,KCVuB,cDWvBsB,YD8MFE,kBC1MwB,SAACF,GACzB,MAAO,CACLtB,KChBuB,cDiBvBsB,aDoMWH,EA9Mf,YAMI,IALFtE,EAKC,EALDA,KACAhB,EAIC,EAJDA,MACAwF,EAGC,EAHDA,eACAE,EAEC,EAFDA,kBACAC,EACC,EADDA,kBAGMC,EAAUC,mBAAQ,kBAAM7E,EAAKqD,OAAS,MAAK,CAACrD,EAAKqD,QAFtD,EAImByB,mBAAS,IAJ5B,mBAIM/D,EAJN,KAIUgE,EAJV,OAKyBD,mBAAS,IALlC,mBAKM1D,EALN,KAKa4D,EALb,OAM6BF,mBAAS,IANtC,mBAMM9C,EANN,KAMeiD,EANf,OAO2BH,oBAAS,GAPpC,mBAOM7F,EAPN,KAOciG,EAPd,OAQuBJ,mBAAS,IAAIvB,MARpC,mBAQMjC,EARN,KAQY6D,EARZ,OAS2BL,mBAAS,UATpC,mBASMhD,EATN,KAScsD,EATd,OAUiCN,mBAAS,IAV1C,mBAUMO,EAVN,KAUiBC,EAVjB,OAWmCR,mBAAS,IAX5C,mBAWMS,EAXN,KAWkBC,EAXlB,OAYiCV,oBAAS,GAZ1C,mBAYM3C,EAZN,KAYiBsD,GAZjB,QAaiCX,oBAAS,GAb1C,qBAaMY,GAbN,MAaiBC,GAbjB,MAgBDC,qBAAU,WAENR,EADER,EACQ,KAEA,YAEX,CAACA,IAEJgB,qBAAU,WACRH,MAAgBrE,IAASE,MACxB,CAACF,EAAOY,EAASV,IAGpB,IAaMuE,GAAc,SAACC,EAAMlF,GACzB+E,GAAaG,GAEXR,EADEQ,GAAQlF,EACG,eAAKA,GAEL,KAWXmF,GAAY,WAChBhB,EAAM,IACNC,EAAS,IACTC,EAAW,IACXC,GAAU,GACVC,EAAQ,IAAI5B,OAYRyC,GAAqB,WACrBpB,GACFQ,EAAU,OASRa,GAAmB,SAACC,EAAM3F,GAC9B,OAAQ2F,GACN,IAAK,OACHf,EAAQ5E,GACR,MACF,IAAK,QACHyE,EAASzE,GACT,MACF,IAAK,UACH0E,EAAW1E,GACX,MACF,IAAK,KACHwE,EAAMxE,KA4CZ,OACE,kBAAC4F,EAAA,EAAD,CAAWzG,UAAU,cACnB,kBAAC,EAAD,iBACM2F,EADN,CAEES,KAAMJ,GACNjC,OAAQ,kBAAMoC,IAAY,OAE5B,kBAACzD,EAAA,EAAD,KACE,yBAAK1C,UAAU,4BACb,wBAAIA,UAAU,QAAd,SACA,kBAAC,EAAD,OAEF,wBAAIA,UAAU,SACd,kBAAC0D,EAAA,EAAD,CAAK1D,UAAU,gBACb,kBAAC0G,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,OAAQ5G,UAAU,wBACjC,kBAAC,EAAD,CACE4B,KAAMA,EACNF,MAAOA,EACPU,OAAQA,EACR7C,OAAQA,EACR+C,QAASA,EACTG,UAAWA,EACXJ,OAnFa,WACvBqD,EAAqB,WAAXtD,EAAsB,KAAO,WAmF7B1B,SAAU6F,GACVhE,SA7Da,SAAC5B,GACpBA,EAAEkG,gBAAgBlG,EAAEkG,iBAEnBpE,IAEDlD,EACFyF,EAAkB,CAAEtD,QAAOY,UAASV,KAAMA,EAAKkF,eAAgBzF,OAE/DyD,EAAe,CAAEpD,QAAOY,UAASV,KAAMA,EAAKkF,eAAgBzF,GG/HzD,IAAM0F,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,KHiIhDb,KACAC,OAmDU9D,UAhDc,WACxB6D,KACAC,SAiDM,wBACEtG,UAAS,+BACI,WAAXoC,EAAsB,OAAS,WAGnC,kBAACsE,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,OAAQ5G,UAAU,oCACjC,kBAAC,EAAD,CACET,OAAQA,EACRC,OAlDO,SAAC0B,GAClBsE,GAAU,GACVE,EAAU,UA/ES,SAAC,GAAkC,IAAhC9D,EAA+B,EAA/BA,KAAMF,EAAyB,EAAzBA,MAAOY,EAAkB,EAAlBA,QAASjB,EAAS,EAATA,GAC5CkF,GAAiB,KAAMlF,GACvBkF,GAAiB,QAAS7E,GAC1B6E,GAAiB,UAAWjE,GAC5BiE,GAAiB,OAAQ,IAAI1C,KAAKjC,IA6ElCuF,CAAajG,GAjEbkG,YAAW,WACTC,OAAOC,OAAO,CACZC,IAAK,EACLC,SAAU,aAEX,MA2GO9H,SA3CS,SAACwB,GAChB3B,GAEJ0F,EAAkB/D,IAyCRvB,SAxDS,SAACkG,GACpBC,GAAeD,GAAc,IAAI4B,gBAwDvB7H,WAxJY,WACtB,IAAMA,EAAa,CACjB8B,MAAO,iBACP+C,IAAK,yBACLD,SAAU,+CAMZ,OAJIqB,GAAcvG,EAAMQ,SACtBF,EAAW6E,IAAM,0BACjB7E,EAAW4E,SAAW,kDAEjB5E,EA8Ie8H,GACZjI,OAAQ,SAACkI,GAAD,OAAOxB,IAAY,EAAMwB,IACjCrI,MAAOA,EAAMsI,QAAO,qBAAGlG,MACf+F,cAAcI,SAAShC,eIpK9BiC,EAjCW,WAAO,IAAD,EACN1C,mBAAS,CAC/BzB,WAAOoE,EACPC,YAAQD,IAHoB,mBACvBzH,EADuB,KACjB2H,EADiB,OAKN7C,mBAAS,MALH,mBAKvB8C,EALuB,KAKjBC,EALiB,KAOxBC,EAAWC,iBAAO,MAElBC,EAAaC,uBAAY,WAAO,IAC5BC,EAAYJ,EAAZI,QACRA,GAAWA,EAAQF,eAClB,IAEGG,EAAUF,uBAAY,WAC1BH,EAASI,QAAU,IAAIE,gBACrB,sCAEIC,YAAehF,EAFnB,EAEmBA,MAAOqE,EAF1B,EAE0BA,OAF1B,OAIMC,EAAQ,CAAEtE,QAAOqE,cAEzBE,GAAQE,EAASI,QAAQC,QAAQP,KAChC,CAACA,IAOJ,OALAU,2BAAgB,WAEd,OADAH,IACO,kBAAMH,OACZ,CAACG,EAASH,IAENnD,mBAAQ,iBAAM,CAACgD,EAAS7H,KAAO,CAAC6H,EAAS7H,KCfnCuI,MATf,WAAgB,IAAD,EACOf,IADP,mBACNgB,EADM,KACDxI,EADC,KAEb,OACE,yBAAKwI,IAAKA,EAAK9I,UAAU,OACvB,kBAAC,EAAD,CAAOM,KAAMA,MCACyI,QACW,cAA7B1B,OAAO2B,SAASC,UAEe,UAA7B5B,OAAO2B,SAASC,UAEhB5B,OAAO2B,SAASC,SAASC,MACvB,2D,YCdSC,cAAgB,CAC7B7J,MCHa,WAAoC,IAAnCuF,EAAkC,uDAA1B,CAAEvF,MAAO,IAAM8J,EAAW,uCAChD,OAAQA,EAAO3F,MACb,INJoB,WMKlB,OAAO,2BAAKoB,GAAZ,IAAmBvF,MAAM,GAAD,mBAAMuF,EAAMvF,OAAZ,CAAmB8J,EAAOrE,YACpD,INLuB,cMMrB,OAAO,2BACFF,GADL,IAEEvF,MAAM,YACDuF,EAAMvF,MAAM2B,KAAI,SAACC,GAClB,OAAIA,EAAKG,KAAO+H,EAAOrE,QAAQ1D,GACtB,eAAK+H,EAAOrE,SAEd7D,QAIf,INhBuB,cMiBrB,OAAO,2BACF2D,GADL,IAEEvF,MAAM,YAAKuF,EAAMvF,MAAMsI,QAAO,SAAC1G,GAAD,OAAUA,EAAKG,KAAO+H,EAAOrE,QAAQ1D,SAEvE,QACE,OAAOwD,MCXPwE,EAAmBhC,OAAOiC,sCAAwCC,IAElEC,ECfmB,WACvB,IACE,IAAMA,EAAaC,aAAaC,QAAQ,SAExC,IAAKF,EAAY,OACjB,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GACP,QDQeC,GACbC,EAAQC,YACZC,EACAT,EACAH,EAAiBa,YAAgBC,OAGnCJ,EAAMK,WAAU,YCXS,SAACvF,GACxB,IACE,IAAM2E,EAAaG,KAAKU,UAAUxF,GAElC4E,aAAaa,QAAQ,QAASd,GAC9B,MAAOK,GACPU,QAAQC,MAAMX,IDMhBY,CAAUV,EAAMW,eAGlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUd,MAAOA,GACf,kBAAC,EAAD,QAGJe,SAASC,eAAe,SHmGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAd,GACLD,QAAQC,MAAMA,EAAMe,c","file":"static/js/main.f9fdb2bd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Spacer() {\r\n  return <div style={{ flexGrow: 1 }} />;\r\n}\r\n\r\nexport default Spacer;\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiMagnify, mdiPencil, mdiTrashCan } from \"@mdi/js\";\r\nimport { Button, ListGroup, Form, InputGroup } from \"react-bootstrap\";\r\n\r\nimport { Spacer, EmptyState } from \".\";\r\n\r\nfunction NoteList({\r\n  notes,\r\n  isEdit,\r\n  onEdit,\r\n  onShow,\r\n  onDelete,\r\n  onSearch,\r\n  emptyState,\r\n}) {\r\n  const notesLength = notes.length;\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-4 d-flex align-items-center\">\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text className=\"px-3\">\r\n              <Icon path={mdiMagnify} size={0.9}></Icon>\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            placeholder=\"Search\"\r\n            onChange={(e) => onSearch(e.target.value)}\r\n          ></Form.Control>\r\n        </InputGroup>\r\n      </div>\r\n      {!!notesLength && (\r\n        <ListGroup className=\"note-list\">\r\n          <TransitionGroup style={{ borderRadius: \"0.25rem\" }}>\r\n            {notes.map((note) => (\r\n              <CSSTransition key={note.id} timeout={500} classNames=\"note\">\r\n                <ListGroup.Item className=\"px-3 note-list-item\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <div\r\n                      role=\"button\"\r\n                      title={note.title}\r\n                      onClick={() => onShow(note)}\r\n                      className=\"text-left text-primary note-list-title\"\r\n                    >\r\n                      <span>{note.title}</span>\r\n                    </div>\r\n                    <Spacer />\r\n                    <div className=\"text-nowrap mr-3 font-weight-light small\">\r\n                      {(note.date || \"\").slice(4, 10)}\r\n                    </div>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      className=\"mr-2\"\r\n                      onClick={() => onEdit(note)}\r\n                    >\r\n                      <Icon path={mdiPencil} size={0.7}></Icon>\r\n                    </Button>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"danger\"\r\n                      disabled={isEdit}\r\n                      onClick={() => onDelete(note)}\r\n                    >\r\n                      <Icon path={mdiTrashCan} size={0.7}></Icon>\r\n                    </Button>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n        </ListGroup>\r\n      )}\r\n      {!notesLength && (\r\n        <EmptyState className=\"note-empty-state\" {...emptyState} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NoteList;\r\n","import React from \"react\";\r\n\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiPlus } from \"@mdi/js\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Row, Card, Form, Button, Accordion } from \"react-bootstrap\";\r\n\r\nimport { Spacer } from \".\";\r\n\r\nfunction NoteForm({\r\n  date,\r\n  title,\r\n  active,\r\n  isEdit,\r\n  onOpen,\r\n  content,\r\n  onChange,\r\n  onSubmit,\r\n  onDiscard,\r\n  validated,\r\n}) {\r\n  return (\r\n    <div className=\"d-flex flex-column align-items-center justify-content-center\">\r\n      <Card style={{ maxWidth: \"350px\", minWidth: \"100%\", overflow: \"hidden\" }}>\r\n        <Accordion activeKey={active}>\r\n          <Accordion.Toggle\r\n            role=\"button\"\r\n            eventKey=\"active\"\r\n            as={Card.Header}\r\n            onClick={onOpen}\r\n            className={`text-left px-3 px-sm-3 ${\r\n              active !== \"active\" ? \"border-bottom-0\" : \"\"\r\n            }`}\r\n          >\r\n            <div className=\"d-flex align-items-center\">\r\n              <span>Add Note</span>\r\n              <Spacer />\r\n              <Icon path={mdiPlus} size={0.8} />\r\n            </div>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"active\">\r\n            <Card.Body className=\"p-3 py-3 p-sm-3\">\r\n              <Form className=\"text-left\" onSubmit={onSubmit}>\r\n                <Form.Group controlId=\"formBasicTitle\">\r\n                  {/* <Form.Label>Title</Form.Label> */}\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={title}\r\n                    placeholder=\"Title\"\r\n                    onChange={(e) => onChange(\"Title\", e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicContent\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    as=\"textarea\"\r\n                    value={content}\r\n                    placeholder=\"Content\"\r\n                    onChange={(e) => onChange(\"Content\", e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Row className=\"px-3\">\r\n                  <Button\r\n                    className=\"mr-2\"\r\n                    onClick={onDiscard}\r\n                    variant=\"outline-secondary\"\r\n                  >\r\n                    Discard\r\n                  </Button>\r\n                  <Spacer />\r\n                  <Button variant=\"primary\" type=\"submit\" disabled={!validated}>\r\n                    {isEdit ? \"Update\" : \"Save\"}\r\n                  </Button>\r\n                </Row>\r\n              </Form>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Accordion>\r\n      </Card>\r\n      <Card\r\n        className=\"text-center mt-3 mt-sm-4 border-none\"\r\n        style={{ width: \"330px\", overflow: \"hidden\" }}\r\n      >\r\n        <Accordion activeKey={active}>\r\n          <Accordion.Collapse eventKey=\"active\">\r\n            <Calendar\r\n              value={date}\r\n              className=\"card\"\r\n              minDate={new Date()}\r\n              onChange={(e) => onChange(\"Date\", e)}\r\n            />\r\n          </Accordion.Collapse>\r\n        </Accordion>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteForm;\r\n","import React from \"react\";\r\n\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { Spacer } from \".\";\r\n\r\nfunction NoteModal({ date, title, onHide, content, ...rest }) {\r\n  return (\r\n    <Modal\r\n      {...rest}\r\n      size=\"lg\"\r\n      centered\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n    >\r\n      <Modal.Header closeButton onHide={onHide}>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{content}</Modal.Body>\r\n      <Modal.Footer>\r\n        <div className=\"h6 px-0\">{date}</div>\r\n        <Spacer />\r\n        <Button onClick={onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default NoteModal;\r\n","import React from \"react\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\nfunction EmptyState({\r\n  subtitle,\r\n  className,\r\n  title = \"No data found\",\r\n  img = \"images/empty-state.svg\",\r\n}) {\r\n  return (\r\n    <Card\r\n      className={`d-flex align-items-center justify-content-center full-width ${className}`}\r\n    >\r\n      <div className=\"text-center pb-4 mb-5\" style={{ maxWidth: \"250px\" }}>\r\n        <img alt=\"empty state\" src={img} />\r\n        {!!title && <div className=\"h5\">{title}</div>}\r\n        {!!subtitle && <div className=\"font-weight-light\">{subtitle}</div>}\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default EmptyState;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, Container } from \"react-bootstrap\";\r\n\r\nimport { Spacer, NoteForm, NoteList, NoteModal } from \"../components\";\r\nimport { addNote, updateNote, deleteNote } from \"../actions\";\r\nimport { uid } from \"../utils\";\r\n\r\nfunction Notes({\r\n  size,\r\n  notes,\r\n  addNoteToState,\r\n  updateNoteInState,\r\n  deleteNoteInState,\r\n}) {\r\n  // state\r\n  const isSmall = useMemo(() => size.width <= 768, [size.width]);\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [date, setDate] = useState(new Date());\r\n  const [active, setActive] = useState(\"active\");\r\n  const [modalData, setModalData] = useState({});\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [validated, setValidated] = useState(false);\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    if (isSmall) {\r\n      setActive(null);\r\n    } else {\r\n      setActive(\"active\");\r\n    }\r\n  }, [isSmall]);\r\n\r\n  useEffect(() => {\r\n    setValidated(!!(title && date));\r\n  }, [title, content, date]);\r\n\r\n  // methods\r\n  const emptyStateProps = () => {\r\n    const emptyState = {\r\n      title: \"No Notes Found\",\r\n      img: \"images/empty-state.svg\",\r\n      subtitle: \"When you are ready, go ahead and add a note\",\r\n    };\r\n    if (searchText && notes.length) {\r\n      emptyState.img = \"images/empty-search.svg\";\r\n      emptyState.subtitle = \"To widen your search, change or remove filters\";\r\n    }\r\n    return emptyState;\r\n  };\r\n\r\n  const toggleModal = (show, note) => {\r\n    setModalShow(show);\r\n    if (show && note) {\r\n      setModalData({ ...note });\r\n    } else {\r\n      setModalData({});\r\n    }\r\n  };\r\n\r\n  const populateForm = ({ date, title, content, id }) => {\r\n    handleFormChange(\"Id\", id);\r\n    handleFormChange(\"Title\", title);\r\n    handleFormChange(\"Content\", content);\r\n    handleFormChange(\"Date\", new Date(date));\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setId(\"\");\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setIsEdit(false);\r\n    setDate(new Date());\r\n  };\r\n\r\n  const scrollTop = () => {\r\n    setTimeout(() => {\r\n      window.scroll({\r\n        top: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  const closeFormWhenSmall = () => {\r\n    if (isSmall) {\r\n      setActive(null);\r\n    }\r\n  };\r\n\r\n  const toggleFormActive = () => {\r\n    setActive(active === \"active\" ? null : \"active\");\r\n  };\r\n\r\n  // handlers\r\n  const handleFormChange = (prop, value) => {\r\n    switch (prop) {\r\n      case \"Date\":\r\n        setDate(value);\r\n        break;\r\n      case \"Title\":\r\n        setTitle(value);\r\n        break;\r\n      case \"Content\":\r\n        setContent(value);\r\n        break;\r\n      case \"Id\":\r\n        setId(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    if (e.preventDefault) e.preventDefault();\r\n\r\n    if (!validated) return;\r\n\r\n    if (isEdit) {\r\n      updateNoteInState({ title, content, date: date.toDateString(), id });\r\n    } else {\r\n      addNoteToState({ title, content, date: date.toDateString(), id: uid() });\r\n    }\r\n    clearForm();\r\n    closeFormWhenSmall();\r\n  };\r\n\r\n  const handleFormDiscard = () => {\r\n    clearForm();\r\n    closeFormWhenSmall();\r\n  };\r\n\r\n  const handleSearch = (searchText) => {\r\n    setSearchText((searchText || \"\").toLowerCase());\r\n  };\r\n\r\n  const handleEdit = (note) => {\r\n    setIsEdit(true);\r\n    setActive(\"active\");\r\n\r\n    populateForm(note);\r\n    scrollTop();\r\n  };\r\n\r\n  const handleDelete = (note) => {\r\n    if (isEdit) return;\r\n\r\n    deleteNoteInState(note);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"p-3 p-sm-4\">\r\n      <NoteModal\r\n        {...modalData}\r\n        show={modalShow}\r\n        onHide={() => toggleModal(false)}\r\n      />\r\n      <Card>\r\n        <div className=\"d-flex px-3 pt-3 px-sm-4\">\r\n          <h2 className=\"pb-1\">Notes</h2>\r\n          <Spacer />\r\n        </div>\r\n        <hr className=\"mt-1\" />\r\n        <Row className=\"px-3 px-sm-4\">\r\n          <Col xs={12} lg={\"auto\"} className=\"pb-3 pt-sm-2 pb-sm-4\">\r\n            <NoteForm\r\n              date={date}\r\n              title={title}\r\n              active={active}\r\n              isEdit={isEdit}\r\n              content={content}\r\n              validated={validated}\r\n              onOpen={toggleFormActive}\r\n              onChange={handleFormChange}\r\n              onSubmit={handleFormSubmit}\r\n              onDiscard={handleFormDiscard}\r\n            />\r\n          </Col>\r\n          <hr\r\n            className={`d-sm-none full-width ${\r\n              active === \"active\" ? \"mt-0\" : \"mt-n3\"\r\n            }`}\r\n          />\r\n          <Col xs={12} lg={\"auto\"} className=\"flex-grow-1 pb-3 pt-sm-2 pb-sm-4\">\r\n            <NoteList\r\n              isEdit={isEdit}\r\n              onEdit={handleEdit}\r\n              onDelete={handleDelete}\r\n              onSearch={handleSearch}\r\n              emptyState={emptyStateProps()}\r\n              onShow={(n) => toggleModal(true, n)}\r\n              notes={notes.filter(({ title }) =>\r\n                title.toLowerCase().includes(searchText)\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notes: state.notes.notes,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addNoteToState: addNote,\r\n  updateNoteInState: updateNote,\r\n  deleteNoteInState: deleteNote,\r\n})(Notes);\r\n","import { ADD_NOTE, UPDATE_NOTE, DELETE_NOTE } from \"./types\";\r\n\r\nexport const addNote = (payload) => {\r\n  return {\r\n    type: ADD_NOTE,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const updateNote = (payload) => {\r\n  return {\r\n    type: UPDATE_NOTE,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const deleteNote = (payload) => {\r\n  return {\r\n    type: DELETE_NOTE,\r\n    payload,\r\n  };\r\n};\r\n","export const ADD_NOTE = 'ADD_NOTE';\r\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\r\nexport const DELETE_NOTE = 'DELETE_NOTE';","export const uid = () => {\r\n  return \"_\" + Math.random().toString(36).substr(2, 9);\r\n};\r\n","import { useRef, useMemo, useLayoutEffect, useState, useCallback } from \"react\";\r\n\r\nconst useResizeObserver = () => {\r\n  const [size, setSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  const [node, setNode] = useState(null);\r\n\r\n  const observer = useRef(null);\r\n\r\n  const disconnect = useCallback(() => {\r\n    const { current } = observer;\r\n    current && current.disconnect();\r\n  }, []);\r\n\r\n  const observe = useCallback(() => {\r\n    observer.current = new ResizeObserver(\r\n      ([\r\n        {\r\n          contentRect: { width, height },\r\n        },\r\n      ]) => setSize({ width, height })\r\n    );\r\n    node && observer.current.observe(node);\r\n  }, [node]);\r\n\r\n  useLayoutEffect(() => {\r\n    observe();\r\n    return () => disconnect();\r\n  }, [observe, disconnect]);\r\n\r\n  return useMemo(() => [setNode, size], [setNode, size]);\r\n};\r\n\r\nexport default useResizeObserver;\r\n","import React from \"react\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\nimport { Notes } from \"./pages\";\nimport { useResizeObserver } from \"./hocs\";\n\nfunction App() {\n  const [ref, size] = useResizeObserver();\n  return (\n    <div ref={ref} className=\"App\">\n      <Notes size={size} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\r\n\r\nimport notesReducer from \"./notesReducers\";\r\n\r\nexport default combineReducers({\r\n  notes: notesReducer,\r\n});\r\n","import { ADD_NOTE, UPDATE_NOTE, DELETE_NOTE } from \"../actions/types\";\r\n\r\nexport default (state = { notes: [] }, action) => {\r\n  switch (action.type) {\r\n    case ADD_NOTE:\r\n      return { ...state, notes: [...state.notes, action.payload] };\r\n    case UPDATE_NOTE:\r\n      return {\r\n        ...state,\r\n        notes: [\r\n          ...state.notes.map((note) => {\r\n            if (note.id === action.payload.id) {\r\n              return { ...action.payload };\r\n            }\r\n            return note;\r\n          }),\r\n        ],\r\n      };\r\n    case DELETE_NOTE:\r\n      return {\r\n        ...state,\r\n        notes: [...state.notes.filter((note) => note.id !== action.payload.id)],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reduxThunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport reducers from \"./reducers\";\nimport { loadState, saveState } from \"./services\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst localState = loadState();\nconst store = createStore(\n  reducers,\n  localState,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const loadState = () => {\r\n  try {\r\n    const localState = localStorage.getItem(\"state\");\r\n\r\n    if (!localState) return undefined;\r\n    return JSON.parse(localState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const localState = JSON.stringify(state);\r\n\r\n    localStorage.setItem(\"state\", localState);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n"],"sourceRoot":""}